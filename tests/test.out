c65: reading tests/wozmon.rom to $ff00:$ffff
c65: PC=ff00 A=00 X=00 Y=00 S=fd FLAGS=<N0 V0 B0 D0 I1 Z0 C0> ticks=0
Skipped 8 lines from tests/wozmon.sym
Type ? for help, ctrl-C to interrupt, quit to exit.
RESET:
*  ff00  d8        cld  
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > ; a few simple tests based on wozmon rom
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > quit extraneous     ; trailing text warning
unexpected
    quit extraneous     
---------^
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > disassemble
RESET:
*  ff00  d8        cld  
   ff01  58        cli  
   ff02  a0 7f     ldy  #$7f
   ff04  98        tya  
NOTCR:
   ff05  c9 df     cmp  #$df
   ff07  f0 13     beq  BACKSPACE ; +19
   ff09  c9 9b     cmp  #$9b
   ff0b  f0 03     beq  ESCAPE ; +3
   ff0d  c8        iny  
   ff0e  10 0f     bpl  NEXTCHAR ; +15
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > DIS                 ; commands are case insensitve
ESCAPE:
   ff10  a9 dc     lda  #$dc
   ff12  20 e4 ff  jsr  ECHO
GETLINE:
   ff15  a9 8d     lda  #$8d
   ff17  20 e4 ff  jsr  ECHO
   ff1a  a0 01     ldy  #$1
BACKSPACE:
   ff1c  88        dey  
   ff1d  30 f6     bmi  GETLINE ; -10
NEXTCHAR:
   ff1f  ad 05 f0  lda  PEEKC
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > dis RESET . NOTCR
RESET:
*  ff00  d8        cld  
   ff01  58        cli  
   ff02  a0 7f     ldy  #$7f
   ff04  98        tya  
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > d ESCAPE .. 6
ESCAPE:
   ff10  a9 dc     lda  #$dc
   ff12  20 e4 ff  jsr  ECHO
GETLINE:
   ff15  a9 8d     lda  #$8d
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > d escape .. 6       ; error: labels are case sensitive (and not $e .. 6)
unexpected
    escape .. 6       
-----^
PC ff00  nv-bdIzc  A 00 X 00 Y 00 SP fd > set A 42            ; reserved labels are case insensitive
PC ff00  nv-bdIzc  A 42 X 00 Y 00 SP fd > set x 10
PC ff00  nv-bdIzc  A 42 X 10 Y 00 SP fd > set v 1
PC ff00  nV-bdIzc  A 42 X 10 Y 00 SP fd > set c false         ; error, not C=$fa
unexpected
    false         
------^
PC ff00  nV-bdIzc  A 42 X 10 Y 00 SP fd > set c 1
PC ff00  nV-bdIzC  A 42 X 10 Y 00 SP fd > break PRBYTE + 1
PC ff00  nV-bdIzC  A 42 X 10 Y 00 SP fd > call PRBYTE
*B ffd2  4a        lsr  a
PC ffd2  nV-bdIzC  A 42 X 10 Y 00 SP fa > step
*  ffd3  4a        lsr  a
PC ffd3  nV-bdIzc  A 21 X 10 Y 00 SP fa > s 3
...
*  ffd6  20 da ff  jsr  PRHEX
PC ffd6  nV-bdIzc  A 04 X 10 Y 00 SP fa > next
4*  ffd9  68        pla  
PC ffd9  NV-bdIzC  A b4 X 10 Y 00 SP fa > d
*  ffd9  68        pla  
PRHEX:
   ffda  29 0f     and  #$f
   ffdc  09 b0     ora  #$b0
   ffde  c9 ba     cmp  #$ba
   ffe0  90 02     bcc  ECHO ; +2
   ffe2  69 06     adc  #$6
ECHO:
   ffe4  48        pha  
   ffe5  29 7f     and  #$7f
   ffe7  c9 0d     cmp  #$d
PC ffd9  NV-bdIzC  A b4 X 10 Y 00 SP fa > b $100.1ff r       ; break on any stack read
PC ffd9  NV-bdIzC  A b4 X 10 Y 00 SP fa > c
01fb: memory read
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
01f0  00 00 00 00 00 00 00 00  b4 d8 ff 42 ff fe 00     |...........B... |
PRHEX:
*  ffda  29 0f     and  #$f
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > stack
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
01f0                                       ff fe 00 00  |            ....|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > ; test some simple expressions
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > ~ 32 #50 1+3*2 (1+3)*2
32 	:=  $32  #50  %110010  '2
#50 	:=  $32  #50  %110010  '2
1+3*2 	:=  $7  #7  %111
(1+3)*2	:=  $8  #8  %1000
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > ~ (<(1 ? -1 : 2)) (<(0 ? 2 : -1)) 1234 & $ff
(<(1 ? -1 : 2)) 	:=  $ff  #255  %11111111
(<(0 ? 2 : -1)) 	:=  $ff  #255  %11111111
1234 & $ff	:=  $34  #52  %110100  '4
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > ~ 3 < 4  3 > 4  3 < 3 3 <= 3 4 >= 3
3 < 4  	:=  $1  #1  %1
3 > 4  	:=  $0  #0  %0
3 < 3 	:=  $0  #0  %0
3 <= 3 	:=  $1  #1  %1
4 >= 3	:=  $1  #1  %1
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > ~ RESET = 3 3==3 RESET <> 3  3!=3
RESET = 3 	:=  $0  #0  %0
3==3 	:=  $1  #1  %1
RESET <> 3  	:=  $1  #1  %1
3!=3	:=  $0  #0  %0
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > fill 400..f 12 34
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > f 410 30 $31 '2 #51 %110100 35
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > f                   ; error: empty fill
missing expression
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem 400
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0400  12 34 12 34 12 34 12 34  12 34 12 34 12 34 12 00  |.4.4.4.4.4.4.4..|
0410  30 31 32 33 35 00 00 00  00 00 00 00 00 00 00 00  |01235...........|
0420  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0430  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem 400..20
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0400  12 34 12 34 12 34 12 34  12 34 12 34 12 34 12 00  |.4.4.4.4.4.4.4..|
0410  30 31 32 33 35 00 00 00  00 00 00 00 00 00 00 00  |01235...........|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem 400 . 420
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0400  12 34 12 34 12 34 12 34  12 34 12 34 12 34 12 00  |.4.4.4.4.4.4.4..|
0410  30 31 32 33 35 00 00 00  00 00 00 00 00 00 00 00  |01235...........|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem . 440
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0420  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0430  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem .. 20
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0440  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0450  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem fffa..3
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
fff0                                 00 00 00           |          ...   |
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem fffa..20
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
fff0                                 00 00 00 ff 00 00  |          ......|
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > mem
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0010                                 00 00 00 00 00 00  |          ......|
0020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0040  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0050  00 00 00 00 00 00 00 00  00 00                    |..........      |
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > dis fffa            ; check disassembly stops at end of memory
   fffa  00        brk  
   fffb  00        brk  
   fffc  00        brk  
   fffd  ff 00 00  bbs7 $00,$0000  ; +0
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > dis fffa..5
   fffa  00        brk  
   fffb  00        brk  
   fffc  00        brk  
   fffd  ff 00 00  bbs7 $00,$0000  ; +0
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > d fffa .. 10
   fffa  00        brk  
   fffb  00        brk  
   fffc  00        brk  
   fffd  ff 00 00  bbs7 $00,$0000  ; +0
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > ; test dereference of name and value
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > f 20 34 12          ; $20 contains byte 34, word 1234
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > f 34 00 ff          ; $34 contains word $ff00
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > f 1234 1 2 3 4
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > m *20               ; dereference zp byte
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
0030              00 ff 00 00  00 00 00 00 00 00 00 00  |    ............|
0040  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0060  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
0070  00 00 00 00                                       |....            |
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > label ptr 20
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > m @ptr              ; derefernce zp word (20 -> 1234)
       0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f   0123456789abcdef
1230              01 02 03 04  00 00 00 00 00 00 00 00  |    ............|
1240  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
1250  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
1260  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
1270  00 00 00 00                                       |....            |
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > d @*ptr             ; dereference indirect zp word (20 -> 34 -> $ff00)
RESET:
   ff00  d8        cld  
   ff01  58        cli  
   ff02  a0 7f     ldy  #$7f
   ff04  98        tya  
NOTCR:
   ff05  c9 df     cmp  #$df
   ff07  f0 13     beq  BACKSPACE ; +19
   ff09  c9 9b     cmp  #$9b
   ff0b  f0 03     beq  ESCAPE ; +3
   ff0d  c8        iny  
   ff0e  10 0f     bpl  NEXTCHAR ; +15
PC ffda  nV-bdIzC  A 42 X 10 Y 00 SP fb > q
